include:
  - remote: "https://gitlab.com/peter.saarland/shipmate/-/raw/master/shipmate.gitlab-ci.yml"

variables:
  DOCKER_TLS_CERTDIR: ""
  PACKAGE_PATH: /go/src/gitlab.com/$CI_PROJECT_PATH
  
.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}
    
cache:
  key: "$CI_JOB_NAME"

compile:
  stage: build
  image:  golang:1.13
  script:
  - (cd /; go get github.com/mitchellh/gox)
  - GO_FLAGS=-mod=vendor CGO_ENABLED=0 gox -arch=amd64 -os="linux windows darwin" -output="build/{{.OS}}_{{.Arch}}/if0" -ldflags "-X main.Version=v$(<VERSION.txt)"
  - cp build/linux_amd64/if0 .
  #- go build -mod=vendor ./cmd/gendoc
  - ./if0 help
  artifacts:
    paths:
    - if0
    #- gendoc
    - build
  except:
  - tags

#include:
#  - template: Container-Scanning.gitlab-ci.yml

unit-tests:
  image: golang:1.14
  stage: test
  script:
    - go test -race $(go list ./... | grep -v /vendor/) -v -coverprofile=coverage.out
    - go tool cover -func=coverage.out